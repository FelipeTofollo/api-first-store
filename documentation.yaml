openapi: 3.0.0
info:
  title: "API First-Store"
  version: "1.0.0"
  description: "API First-Store, API usada para lecionar desenvolvimento Back-End"
  contact:
    name: João Otávio Carvalho
    email: otavioc.dev@gmail.com
    url: https://www.linkedin.com/in/jo%C3%A3o-ot%C3%A1vio-carvalho-164023151/
servers:
  - url: http://localhost:13700/
tags:
  - name: Produtos
  - name: Tipo Produtos
  - name: Carrinhos
  - name: Usuarios
  - name: Login
  - name: Buscar Cep
paths:
  /produtos:
    get:
      operationId: getAllProdutos
      description: Retorna uma lista de Produtos.
      summary: Buscar produtos
      tags: [ 'Produtos' ]
      parameters:

        - in: query
          name: nome_produto
          schema:
            type: string
            pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
            maxLength: 255            
          description: Filtro para buscar produtos pelo nome_produto 
        - in: query
          name: rating
          schema:
            type: integer
            minimum: 0          
            maximum: 9999     
            format: int32                   
          description: Filtro para buscar produtos pelo rating 
        - in: query
          name: ativo
          schema:
            type: boolean
          description: Filtro para buscar produtos pelo estado 
        - in: query
          name: preco
          schema:
            type: string
            pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
            maxLength: 255            
          description: Filtro para buscar produtos pelo preco 
      
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 100
                items:
                  $ref: '#/components/schemas/ProdutosView'

    post:
      summary: Criar Produtos
      description: Cria um novo produto.
      operationId: createProdutos
      tags: [ 'Produtos' ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutosInput'
      
      responses:
        "201":
          description: Produto criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'  

  /produtos/${id}:
    get:
      summary: Busca um produto pelo id
      description: Busca um produto específico pelo ID recebido.
      operationId: getByIdProduto
      tags: [ 'Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999    
            format: int32                    
            description: Id do produto
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ProdutosView'

    put:
      operationId: updateProduto
      description: Atualiza um produto específico pelo ID recebido.
      summary: Atualizar produto pelo id
      tags: [ 'Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do produto
            minimum: 0          
            maximum: 9999          
            format: int32              
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutosInput'

      responses:
        "200":
          description: Produto atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject' 

    delete:
      operationId: deleteProduto
      description: Inativa/Ativa um produto específico pelo ID recebido.
      summary: Inativar/Ativar produto pelo id
      tags: [ 'Produtos' ]
    
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do produto
            minimum: 0          
            maximum: 9999   
            format: int32                     
          required: true

      responses:
        "200":
          description: Produto inativado/ativado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'          

  /tipo_produtos:
    get:
      operationId: getAllTipoProdutos
      description: Retorna uma lista de Tipos de Produtos.
      summary: Buscar Tipos de produtos
      tags: [ 'Tipo Produtos' ]

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 100
                items:
                  $ref: '#/components/schemas/TipoProdutos'

    post:
      operationId: createTipoProduto
      description: Cria um novo tipo de produto.
      summary: Criar Tipos de produtos
      tags: [ 'Tipo Produtos' ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TipoProdutos'

      responses:
        "201":
          description: Tipo Produto criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /tipo_produtos/${id}:
    get:
      summary: Busca um Tipo produto pelo id
      description: Busca um Tipo produto específico pelo ID recebido.
      operationId: getByIdTipoProduto
      tags: [ 'Tipo Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999            
            format: int32            
            description: Id do tipo produto
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/TipoProdutos'

    put:
      operationId: updateTipoProduto
      description: Atualiza um tipo produto específico pelo ID recebido.
      summary: Atualizar Tipo produto pelo id
      tags: [ 'Tipo Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999    
            format: int32                      
            description: Id do tipo produto a ser atualizado
          required: true

      responses:
        "200":
          description: Tipo Produto atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

    delete:
      summary: Inativar/Ativar Tipo produto pelo id
      description: Inativa/Ativa um tipo produto específico pelo ID recebido.
      operationId: deleteTipoProduto
      tags: [ 'Tipo Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999   
            format: int32                     
            description: Id do tipo produto a ser inativado/ativado
          required: true

      responses:
        "200":
          description: Tipo produto ativado/inativado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /carrinhos:
    get:
      operationId: getAllCarrinhos
      description: Retorna uma lista de carrinhos.
      summary: Buscar carrinhos
      tags: [ 'Carrinhos' ]

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 100
                items:
                  $ref: '#/components/schemas/CarrinhosView'

    post:
      summary: Criar novo carrinho
      description: Cria um novo carrinho.
      operationId: createCarrinhos
      tags: [ 'Carrinhos' ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrinhosCreate'
      
      responses:
        "201":
          description: Carrinho criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /carrinhos/${id}:
    get:
      operationId: getByIdCarrinho
      description: Busca um carrinho específico pelo ID recebido.
      summary: Busca um carrinho pelo id
      tags: [ 'Carrinhos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999  
            format: int32                      
            description: Id do carrinho
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/CarrinhosComProdutos'

    put:
      operationId: updateCarrinhos
      description: Atualiza um carrinho específico pelo ID recebido.
      summary: Atualizar carrinho pelo id
      tags: [ 'Carrinhos' ]
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
            minimum: 0                      
            maximum: 9999
            format: int32            
            description: Id do carrinho

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrinhosCreate'

      responses:
        "200":
          description: Carrinho atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'  

    delete:
      operationId: deleteCarrinho
      description: Inativa/Ativa um carrinho específico pelo ID recebido.
      summary: Inativar/Ativar carrinho pelo id
      tags: [ 'Carrinhos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do carrinho
            minimum: 0          
            maximum: 9999       
            format: int32                 
          required: true

      responses:
        "200":
          description: Carrinho ativado/inativado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject' 

  /usuarios:
    get:
      operationId: getAllUsuarios
      description: Retorna uma lista de Usuarios.
      summary: Buscar Usuarios
      tags: [ 'Usuarios' ]

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 100
                items:
                  $ref: '#/components/schemas/Usuarios'

    post:
      summary: Criar novo Usuario
      description: Cria um novo Usuario.
      operationId: createUsuarios
      tags: [ 'Usuarios' ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuarios'
      
      responses:
        "201":
          description: Usuario criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /usuarios/${id}:
    get:
      operationId: getByIdUsuario
      description: Busca um Usuario específico pelo ID recebido.
      summary: Busca um Usuario pelo id
      tags: [ 'Usuarios' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999       
            format: int32                 
            description: Id do Usuario
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 100
                items:
                  $ref: '#/components/schemas/Usuarios'

    put:
      operationId: updateUsuarios
      description: Atualiza um Usuario específico pelo ID recebido.
      summary: Atualizar Usuario pelo id
      tags: [ 'Usuarios' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999
            format: int32            
            description: Id do usuário
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuarios'

      responses:
        "200":
          description: Usuario atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'  

    delete:
      operationId: deleteUsuario
      description: Inativa/Ativa um Usuario específico pelo ID recebido.
      summary: Inativar/Ativar usuário pelo id
      tags: [ 'Usuarios' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999    
            format: int32                    
            description: Id do Usuario
          required: true

      responses:
        "200":
          description: Usuario ativado/inativado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject' 

  /login:

    post:
      summary: Realizar login
      description: Realiza login
      operationId: loginUsuario
      tags: [ 'Login' ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      
      responses:
        "200":
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /login/${id}:

    put:
      summary: Alterar senha
      description: Altera a senha de um usuários.
      operationId: alterarSenhaUsuario
      tags: [ 'Login' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999  
            format: int32                      
            description: Id do usuário
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlterarSenha'

      responses:
        "200":
          description: Senha atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /buscar_cep/${cep}:
    get:
      operationId: BuscarCep
      description: Busca um cep consumindo API externa.
      summary: Busca o endereço de um CEP.
      tags: [ 'Buscar Cep' ]
      parameters:
        - in: path
          required: true
          name: cep
          schema:
            type: string
            description: O CEP à ser buscado
            pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
            maxLength: 255

        - in: query
          name: id
          schema:
            type: integer
            minimum: 0          
            maximum: 9999
            format: int32            

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 100                
                items:
                  $ref: '#/components/schemas/CepResponse'
  

components:
  schemas:

    ProdutosView:
      type: object
      additionalProperties: false
      properties:
        nome_produto:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 255          
        descricao_produto:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 1000          
        id_tipo_produto:
          type: integer
          minimum: 0          
          maximum: 9999   
          format: int32               
        descricao_tipo_produto:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 255
        preco:
          type: string
          pattern: "R$00,00" # adicionado padrão aqui
          maxLength: 255
        rating:
          type: integer
          minimum: 0          
          maximum: 9999   
          format: int32                 
        ativo:
          type: boolean
        quantidade:
          type: integer
          minimum: 0          
          maximum: 9999   
          format: int32                 
        caminho_imagem:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100
        criado_em:
          type: string
          format: date-time
          maxLength: 10
          pattern: "DD/MM/YYYY" # adicionado padrão aqui
        alterado_em:
          type: string
          format: date-time
          pattern: "DD/MM/YYYY" # adicionado padrão aqui
          maxLength: 10
        id_usuario:
          type: integer
          minimum: 0          
          maximum: 9999
          format: int32          
        nome_usuario:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100                             

    ProdutosInput:
      type: object
      additionalProperties: false      
      properties:
        nome_produto:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        descricao_produto:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100           
        preco:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        rating:
          type: integer
          minimum: 0          
          maximum: 9999     
          format: int32                       
        ativo:
          type: boolean
        quantidade:
          type: integer
          minimum: 0          
          maximum: 9999
          format: int32          
        caminho_imagem:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        criado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        alterado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        id_usuario:
          type: integer 
          minimum: 0          
          maximum: 9999     
          format: int32                       

    Usuarios:
      type: object
      additionalProperties: false      
      properties:
        nome:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        cpf:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100           
        senha:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        email:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        data_nascimento:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        telefone:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        endereco:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        endereco2:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        cep:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 10
        id_tipo_usuario:
          type: integer 
          minimum: 0          
          maximum: 9999    
          format: int32                
        ativo:
          type: boolean
        criado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        alterado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            

    TipoProdutos:
      type: object
      additionalProperties: false
      properties:
        descricao:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100           
        ativo:
          type: boolean
        criado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        alterado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100
        criado_por_id_usuario:
          type: integer 
          minimum: 0          
          maximum: 9999   
          format: int32                 
        alterado_por_id_usuario:
          type: integer 
          minimum: 0          
          maximum: 9999
          format: int32                    

    CarrinhosView:
      type: object
      additionalProperties: false      
      properties:
        nome:
         type: string
         pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
         maxLength: 100           
        ativo:
          type: boolean
        finalizado:
          type: boolean
        id_usuario:
          type: integer
          maximum: 9999   
          format: int32                   
        id_produtos:
          type: string   
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100                    
        criado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        alterado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
    
    CarrinhosCreate:
      type: object
      additionalProperties: false
      properties:
        id_usuario:
          type: integer
          minimum: 0
          maximum: 9999
          format: int32                        
        id_produtos:
          type: integer
          minimum: 0          
          maximum: 9999
          format: int32                               

    CarrinhosComProdutos:
      type: object
      additionalProperties: false      
      properties:
        nome:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100
        ativo:
          type: boolean
        finalizado:
          type: boolean
        id_usuario:
          type: integer
          minimum: 0          
          maximum: 9999
          format: int32          
        id_produtos:
          type: string  
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100                   
        criado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          
        alterado_em:
          type: string
          format: date-time
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          
        dados_produtos:
          type: array
          maxItems: 100
          items:
            $ref: '#/components/schemas/ProdutosView'

    Login:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          
        senha:
          type: string  
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100                    

    AlterarSenha:
      type: object
      additionalProperties: false      
      properties:
        senha:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          
        senha_nova:
          type: string  
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          

    ResponseObject:
      additionalProperties: false
      type: object
      properties:
        message:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          

    DeleteInput:
      type: object
      additionalProperties: false      
      properties:
        id_usuario:
          type: integer
          minimum: 0          
          maximum: 9999    
          format: int32                

    CepResponse:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100            
        state:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          
        city:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          
        district:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          
        adress:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          
        status:
          type: integer
          minimum: 0          
          maximum: 9999  
          format: int32                  
        ok:
          type: boolean
        statusText:
          type: string
          pattern: "^[a-zA-Z0-9]+$" # adicionado padrão aqui
          maxLength: 100          