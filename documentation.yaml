openapi: 3.0.0
info:
  title: "API First-Store"
  version: "1.0.0"
  description: "API First-Store, API usada para lecionar desenvolvimento Back-End"
  contact:
    name: João Otávio Carvalho
    email: otavioc.dev@gmail.com
    url: https://example.com/
servers:
  - url: http://localhost:13700/
tags:
  - name: Produtos
  - name: Tipo Produtos
  - name: Carrinhos
  - name: Usuarios
  - name: Login
  - name: Buscar Cep
paths:
  /produtos:
    get:
      operationId: getAllProdutos
      description: Retorna uma lista de Produtos.
      summary: Buscar produtos
      tags: [ 'Produtos' ]
      parameters:

        - in: query
          name: nome_produto
          schema:
            type: string
          description: Filtro para buscar produtos pelo nome_produto 
        - in: query
          name: rating
          schema:
            type: integer
          description: Filtro para buscar produtos pelo rating 
        - in: query
          name: ativo
          schema:
            type: boolean
          description: Filtro para buscar produtos pelo estado 
        - in: query
          name: preco
          schema:
            type: string
          description: Filtro para buscar produtos pelo preco 
        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutosView'

    post:
      summary: Criar Produtos
      description: Cria um novo produto.
      operationId: createProdutos
      tags: [ 'Produtos' ]
      parameters:

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutosInput'
      
      responses:
        "201":
          description: Produto criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'  

  /produtos/${id}:
    get:
      summary: Busca um produto pelo id
      description: Busca um produto específico pelo ID recebido.
      operationId: getByIdProduto
      tags: [ 'Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do produto
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ProdutosView'

    put:
      operationId: updateProduto
      description: Atualiza um produto específico pelo ID recebido.
      summary: Atualizar produto pelo id
      tags: [ 'Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do produto
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutosInput'

      responses:
        "200":
          description: Produto atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject' 

    delete:
      operationId: deleteProduto
      description: Inativa/Ativa um produto específico pelo ID recebido.
      summary: Inativar/Ativar produto pelo id
      tags: [ 'Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do produto
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        "200":
          description: Produto inativado/ativado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'          

  /tipo_produtos:
    get:
      operationId: getAllTipoProdutos
      description: Retorna uma lista de Tipos de Produtos.
      summary: Buscar Tipos de produtos
      tags: [ 'Tipo Produtos' ]
      parameters:

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TipoProdutos'

    post:
      operationId: createTipoProduto
      description: Cria um novo tipo de produto.
      summary: Criar Tipos de produtos
      tags: [ 'Tipo Produtos' ]
      parameters:

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TipoProdutos'

      responses:
        "201":
          description: Tipo Produto criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /tipo_produtos/${id}:
    get:
      summary: Busca um Tipo produto pelo id
      description: Busca um Tipo produto específico pelo ID recebido.
      operationId: getByIdTipoProduto
      tags: [ 'Tipo Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do tipo produto
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TipoProdutos'

    put:
      operationId: updateTipoProduto
      description: Atualiza um tipo produto específico pelo ID recebido.
      summary: Atualizar Tipo produto pelo id
      tags: [ 'Tipo Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do tipo produto a ser atualizado
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        "200":
          description: Tipo Produto atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

    delete:
      summary: Inativar/Ativar Tipo produto pelo id
      description: Inativa/Ativa um tipo produto específico pelo ID recebido.
      operationId: deleteTipoProduto
      tags: [ 'Tipo Produtos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do tipo produto a ser inativado/ativado
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        "200":
          description: Tipo produto ativado/inativado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /carrinhos:
    get:
      operationId: getAllCarrinhos
      description: Retorna uma lista de carrinhos.
      summary: Buscar carrinhos
      tags: [ 'Carrinhos' ]
      parameters:

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarrinhosView'

    post:
      summary: Criar novo carrinho
      description: Cria um novo carrinho.
      operationId: createCarrinhos
      tags: [ 'Carrinhos' ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrinhosCreate'
      
      parameters:

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        "201":
          description: Carrinho criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /carrinhos/${id}:
    get:
      operationId: getByIdCarrinho
      description: Busca um carrinho específico pelo ID recebido.
      summary: Busca um carrinho pelo id
      tags: [ 'Carrinhos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do carrinho
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/CarrinhosComProdutos'

    put:
      operationId: updateCarrinhos
      description: Atualiza um carrinho específico pelo ID recebido.
      summary: Atualizar carrinho pelo id
      tags: [ 'Carrinhos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do carrinho
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrinhosCreate'

      responses:
        "200":
          description: Carrinho atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'  

    delete:
      operationId: deleteCarrinho
      description: Inativa/Ativa um carrinho específico pelo ID recebido.
      summary: Inativar/Ativar carrinho pelo id
      tags: [ 'Carrinhos' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do carrinho
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        "200":
          description: Carrinho ativado/inativado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject' 

  /usuarios:
    get:
      operationId: getAllUsuarios
      description: Retorna uma lista de Usuarios.
      summary: Buscar Usuarios
      tags: [ 'Usuarios' ]
      parameters:

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuarios'

    post:
      summary: Criar novo Usuario
      description: Cria um novo Usuario.
      operationId: createUsuarios
      tags: [ 'Usuarios' ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuarios'
      
      parameters:

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        "201":
          description: Usuario criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /usuarios/${id}:
    get:
      operationId: getByIdUsuario
      description: Busca um Usuario específico pelo ID recebido.
      summary: Busca um Usuario pelo id
      tags: [ 'Usuarios' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do Usuario
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuarios'

    put:
      operationId: updateUsuarios
      description: Atualiza um Usuario específico pelo ID recebido.
      summary: Atualizar Usuario pelo id
      tags: [ 'Usuarios' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do usuário
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuarios'

      responses:
        "200":
          description: Usuario atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'  

    delete:
      operationId: deleteUsuario
      description: Inativa/Ativa um Usuario específico pelo ID recebido.
      summary: Inativar/Ativar usuário pelo id
      tags: [ 'Usuarios' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do Usuario
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        "200":
          description: Usuario ativado/inativado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject' 

  /login:

    post:
      summary: Realizar login
      description: Realiza login
      operationId: loginUsuario
      tags: [ 'Login' ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      
      parameters:
        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        "200":
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /login/${id}:

    put:
      summary: Alterar senha
      description: Altera a senha de um usuários.
      operationId: alterarSenhaUsuario
      tags: [ 'Login' ]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            description: Id do usuário
          required: true

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlterarSenha'

      responses:
        "200":
          description: Senha atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'

  /buscar_cep/${cep}:
    get:
      operationId: BuscarCep
      description: Busca um cep consumindo API externa.
      summary: Busca o endereço de um CEP.
      tags: [ 'Buscar Cep' ]
      parameters:
        - in: path
          name: cep
          schema:
            type: string
            description: O CEP à ser buscado
          required: true

        - in: query
          name: id
          schema:
            type: integer

        - in: query
          name: nomedb
          schema:
            type: string
          description: Filtro para selecionar o banco de dados
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CepResponse'  

components:
  schemas:

    ProdutosView:
      type: object
      properties:
        nome_produto:
          type: string
        descricao_produto:
          type: string
        id_tipo_produto:
          type: integer
        descricao_tipo_produto:
          type: string
        preco:
          type: string
        rating:
          type: integer
        ativo:
          type: boolean
        quantidade:
          type: integer
        caminho_imagem:
          type: string
        criado_em:
          type: string
          format: date-time
        alterado_em:
          type: string
          format: date-time
        id_usuario:
          type: integer
        nome_usuario:
          type: string                   

    Produto:
        type: object
        properties:
          nome_produto:
            type: string
          descricao_produto:
           type: string
          preco:
            type: string
          rating:
            type: integer
          ativo:
            type: boolean
          quantidade:
            type: integer
          caminho_imagem:
            type: string
          criado_em:
            type: string
            format: date-time
          alterado_em:
            type: string
            format: date-time
          id_usuario:
            type: integer  

    ProdutosInput:
        type: object
        properties:
          nome_produto:
            type: string
          descricao_produto:
           type: string
          preco:
            type: string
          rating:
            type: integer
          ativo:
            type: boolean
          quantidade:
            type: integer
          caminho_imagem:
            type: string
          criado_em:
            type: string
            format: date-time
          alterado_em:
            type: string
            format: date-time
          id_usuario:
            type: integer 

    Usuarios:
        type: object
        properties:
          nome:
            type: string
          cpf:
           type: string
          senha:
            type: string
          email:
            type: string
          data_nascimento:
            type: string
          telefone:
            type: string
          endereco:
            type: string
          endereco2:
            type: string
          cep:
            type: string
          id_tipo_usuario:
            type: integer 
          ativo:
            type: boolean
          criado_em:
            type: string
            format: date-time
          alterado_em:
            type: string
            format: date-time

    TipoProdutos:
        type: object
        properties:
          descricao:
           type: string
          ativo:
            type: boolean
          criado_em:
            type: string
            format: date-time
          alterado_em:
            type: string
            format: date-time
          criado_por_id_usuario:
            type: integer         
          alterado_por_id_usuario:
            type: integer           

    CarrinhosView:
        type: object
        properties:
          nome:
           type: string
          ativo:
            type: boolean
          finalizado:
            type: boolean
          id_usuario:
            type: integer
          id_produtos:
            type: string           
          criado_em:
            type: string
            format: date-time
          alterado_em:
            type: string
            format: date-time
    
    CarrinhosCreate:
        type: object
        properties:
          id_usuario:
            type: integer
          id_produtos:
            type: string  
            required:
              - id_produtos
              - id_usuario               

    CarrinhosComProdutos:
        type: object
        properties:
          nome:
           type: string
          ativo:
            type: boolean
          finalizado:
            type: boolean
          id_usuario:
            type: integer
          id_produtos:
            type: string           
          criado_em:
            type: string
            format: date-time
          alterado_em:
            type: string
            format: date-time
          dados_produtos:
            $ref: '#/components/schemas/ProdutosView'

    Login:
        type: object
        properties:
          email:
            type: string
          senha:
            type: string            

    AlterarSenha:
        type: object
        properties:
          senha:
            type: string
          senha_nova:
            type: string  

    ResponseObject:
        type: object
        properties:
          message:
            type: string

    DeleteInput:
        type: object
        properties:
          id_usuario:
            type: integer

    CepResponse:
        type: object
        properties:
          code:
            type: string            
          state:
            type: string
          city:
            type: string
          district:
            type: string
          adress:
            type: string
          status:
            type: integer
          ok:
            type: boolean
          statusTet:
            type: string                                                                                      